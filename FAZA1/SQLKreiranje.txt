-- SEKVENCE
CREATE SEQUENCE DETE_ID_SEQ MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20;
CREATE SEQUENCE RODITELJ_ID_SEQ MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20;
CREATE SEQUENCE AKTIVNOST_ID_SEQ MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20;
CREATE SEQUENCE PRIJAVA_ID_SEQ MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20;
CREATE SEQUENCE EVALUACIJA_ID_SEQ MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20;
CREATE SEQUENCE OBROK_ID_SEQ MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20;
CREATE SEQUENCE POVREDA_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;
CREATE SEQUENCE UCESTVUJE_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;
CREATE SEQUENCE STARATELJSTVO_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;
CREATE SEQUENCE JE_DAT_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;
CREATE SEQUENCE UCESCE_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;
CREATE SEQUENCE TELEFON_RODITELJA_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;
CREATE SEQUENCE EMAIL_RODITELJA_ID_SEQ MINVALUE 1 MAXVALUE 999999 START WITH 1 INCREMENT BY 1 CACHE 20;

-- TABELA DETE
CREATE TABLE DETE(
    ID NUMBER,
    Ime VARCHAR2(30) NOT NULL,
    Prezime VARCHAR2(30) NOT NULL,
    Datum_rodjenja DATE NOT NULL,
    Pol CHAR(1) NOT NULL,
    Adresa VARCHAR2(100),
    Telefon_deteta VARCHAR2(20),
    Email_deteta VARCHAR2(50),
    Posebne_potrebe VARCHAR2(256)
);

-- TABELA RODITELJ
CREATE TABLE RODITELJ(
    ID NUMBER,
    Ime VARCHAR2(30) NOT NULL,
    Prezime VARCHAR2(30) NOT NULL
);

-- TABELA LOKACIJA
CREATE TABLE LOKACIJA(
    Naziv VARCHAR2(50),
    Tip VARCHAR2(20),
    Adresa VARCHAR2(100),
    Kapacitet NUMBER,
    Dostupna_oprema VARCHAR2(256)
);

-- TABELA ANGAZOVANO_LICE
CREATE TABLE ANGAZOVANO_LICE(
    JMBG CHAR(13),
    Ime VARCHAR2(30) NOT NULL,
    Prezime VARCHAR2(30) NOT NULL,
    Pol CHAR(1) NOT NULL,
    Adresa VARCHAR2(100),
    Broj_telefona VARCHAR2(20),
    Email VARCHAR2(50),
    Strucna_sprema VARCHAR2(50),
    -- Polja za oblast rada (Alternativa D)
    Volonter CHAR(1) DEFAULT 'N',
    Trener CHAR(1) DEFAULT 'N',
    Animator CHAR(1) DEFAULT 'N',
    Zdravstveni_radnik CHAR(1) DEFAULT 'N'
);


-- TABELA AKTIVNOST
CREATE TABLE AKTIVNOST(
    ID_aktivnosti NUMBER,
    Tip VARCHAR2(30),
    Naziv VARCHAR2(50) NOT NULL,
    Datum DATE,
    Starosna_grupa VARCHAR2(30),
    Max_ucesnika NUMBER,
    Ogranicenja VARCHAR2(256),
    Naziv_lokacije VARCHAR2(50),
    Prevozno_sredstvo VARCHAR2(30),
    Plan_puta VARCHAR2(256),
    Potrebna_oprema VARCHAR2(100),
    Vodic VARCHAR2(50),
    Sport VARCHAR2(30),
    Posebna_oprema VARCHAR2(100)
);

-- Tabela PRIJAVA
CREATE TABLE PRIJAVA(
    ID_prijave NUMBER,
    Datum_prijave DATE NOT NULL,
    Status VARCHAR2(20),
    ID_aktivnosti NUMBER NOT NULL,
    ID_roditelja NUMBER NOT NULL,
    ID_deteta NUMBER NOT NULL
);

-- TABELA EVALUACIJA
CREATE TABLE EVALUACIJA(
    ID NUMBER,
    ID_aktivnosti NUMBER,
    JMBG_lice CHAR(13),
    Ocena NUMBER,
    Datum DATE,
    Opis VARCHAR2(256)
);

-- TABELA OBROK
CREATE TABLE OBROK(
    ID NUMBER,
    Tip VARCHAR2(30),
    Uzrast VARCHAR2(30),
    Jelovnik VARCHAR2(256),
    Posebne_opcije VARCHAR2(100),
    Naziv_lokacije VARCHAR2(50),
    ID_aktivnosti NUMBER
);

-- TABELA POVREDA
CREATE TABLE POVREDA(
    ID NUMBER,
    ID_dete NUMBER NOT NULL,
    ID_aktivnosti NUMBER NOT NULL,
    Datum DATE NOT NULL,
    Opis VARCHAR2(256),
    Odgovorno_osoblje_JMBG CHAR(13),
    Preduzete_mere VARCHAR2(256)
);

-- TABELA JE_DAT
CREATE TABLE JE_DAT(
    ID NUMBER,
    ID_dete NUMBER NOT NULL,
    ID_obrok NUMBER NOT NULL
);

-- TABELA UCESCE
CREATE TABLE UCESCE(
    ID NUMBER,
    ID_aktivnosti NUMBER NOT NULL,
    JMBG CHAR(13) NOT NULL
);

-- STARATELJSTVO
CREATE TABLE STARATELJSTVO(
    ID NUMBER,
    ID_roditelj NUMBER NOT NULL,
    ID_dete NUMBER NOT NULL
);

-- UCESTVUJE
CREATE TABLE UCESTVUJE (
    ID NUMBER,
    ID_roditelj NUMBER,
    ID_dete NUMBER NOT NULL,
    ID_aktivnosti NUMBER NOT NULL,
    Prisustvo        CHAR(2),
    Ocena_aktivnosti NUMBER NULL, 
    Komentari        VARCHAR2(256),
    Pratilac CHAR(2) NOT NULL
);

-- Telefon i Email roditelja

CREATE TABLE TELEFON_RODITELJA(
    ID NUMBER,
    Telefon VARCHAR2(20) NOT NULL,
    ID_deteta NUMBER NOT NULL
);
CREATE TABLE EMAIL_RODITELJA(
    ID NUMBER,
    Email VARCHAR2(50) NOT NULL,
    ID_deteta NUMBER NOT NULL
);









-- CONSTRAINTS ZA DETE
ALTER TABLE DETE ADD CONSTRAINT DETE_PK PRIMARY KEY(ID);
ALTER TABLE DETE ADD CONSTRAINT DETE_POL_CHK CHECK (Pol IN ('M','Z'));
ALTER TABLE DETE ADD CONSTRAINT DETE_TELEFON_CHK CHECK (REGEXP_LIKE(Telefon_deteta, '^[+0-9 -]{6,20}$'));

-- CONSTRAINTS ZA RODITELJ
ALTER TABLE RODITELJ ADD CONSTRAINT RODITELJ_PK PRIMARY KEY(ID);

-- CONSTRAINTS ZA LOKACIJA
ALTER TABLE LOKACIJA ADD CONSTRAINT LOKACIJA_PK PRIMARY KEY(Naziv);
ALTER TABLE LOKACIJA ADD CONSTRAINT LOKACIJA_TIP_CHK CHECK(Tip IN ('zatvoreni prostor','otvoreni prostor'));
ALTER TABLE LOKACIJA ADD CONSTRAINT LOKACIJA_KAP_CHK CHECK(Kapacitet>0);

-- CONSTRAINTS ZA AKTIVNOST
ALTER TABLE AKTIVNOST ADD CONSTRAINT AKTIVNOST_PK PRIMARY KEY(ID_aktivnosti);
ALTER TABLE AKTIVNOST ADD CONSTRAINT AKTIVNOST_MAXU_CHK CHECK(Max_ucesnika > 0);
ALTER TABLE AKTIVNOST ADD CONSTRAINT AKTIVNOST_LOK_FK 
    FOREIGN KEY(Naziv_lokacije) REFERENCES LOKACIJA(Naziv) ON DELETE CASCADE;
ALTER TABLE AKTIVNOST ADD CONSTRAINT AKTIVNOST_TIP_CHK CHECK(Tip IN('Izlet', 'Sportski trening', 'Kulturni program', 'Radionica'));

-- CONSTRAINTS ZA PRIJAVA
ALTER TABLE PRIJAVA ADD CONSTRAINT PRIJAVA_PK PRIMARY KEY(ID_prijave);
ALTER TABLE PRIJAVA ADD CONSTRAINT PRIJAVA_STATUS_CHK CHECK(Status IN ('odobreno', 'na ƒçekanju', 'odbijeno'));
ALTER TABLE PRIJAVA ADD CONSTRAINT PRIJAVA_AKT_FK FOREIGN KEY(ID_aktivnosti) REFERENCES AKTIVNOST(ID_aktivnosti) ON DELETE CASCADE;
ALTER TABLE PRIJAVA ADD CONSTRAINT PRIJAVA_RODITELJ_FK FOREIGN KEY(ID_roditelja) REFERENCES RODITELJ(ID) ON DELETE CASCADE;
ALTER TABLE PRIJAVA ADD CONSTRAINT PRIJAVA_DETE_FK FOREIGN KEY (ID_deteta)
    REFERENCES DETE(ID) ON DELETE CASCADE;

-- CONSTRAINTS ZA STARATELJSTVO
ALTER TABLE STARATELJSTVO ADD CONSTRAINT STARATELJSTVO_PK PRIMARY KEY(ID);
ALTER TABLE STARATELJSTVO ADD CONSTRAINT STAR_RODITELJ_FK FOREIGN KEY(ID_roditelj) REFERENCES RODITELJ(ID) ON DELETE CASCADE;
ALTER TABLE STARATELJSTVO ADD CONSTRAINT STAR_DETE_FK FOREIGN KEY(ID_dete) REFERENCES DETE(ID) ON DELETE CASCADE;

-- CONSTRAINTS ZA UCESTVUJE
ALTER TABLE UCESTVUJE 
    ADD CONSTRAINT UCESTVUJE_PK PRIMARY KEY (ID);
ALTER TABLE UCESTVUJE ADD CONSTRAINT UCESTVUJE_RODITELJ_FK FOREIGN KEY (ID_roditelj) REFERENCES RODITELJ(ID);
ALTER TABLE UCESTVUJE ADD CONSTRAINT UCESTVUJE_DETE_FK FOREIGN KEY (ID_dete) REFERENCES DETE(ID);
ALTER TABLE UCESTVUJE ADD CONSTRAINT UCESTVUJE_AKT_FK FOREIGN KEY (ID_aktivnosti) REFERENCES AKTIVNOST(ID_aktivnosti);
ALTER TABLE UCESTVUJE ADD CONSTRAINT UCESTVUJE_PRISUSTVO_CHK CHECK (Prisustvo IN ('Da','Ne'));
ALTER TABLE UCESTVUJE ADD CONSTRAINT UCESTVUJE_OCENA_CHK CHECK(Ocena_aktivnosti IS NULL OR (Ocena_aktivnosti BETWEEN 1 AND 10));
ALTER TABLE UCESTVUJE ADD CONSTRAINT UCESTVUJE_PRATILAC_CHK CHECK (Pratilac IN ('Da','Ne'));


-- CONSTRAINTS ZA ANGAZOVANO_LICE
ALTER TABLE ANGAZOVANO_LICE ADD CONSTRAINT ANGAZOVANO_PK PRIMARY KEY(JMBG);
ALTER TABLE ANGAZOVANO_LICE ADD CONSTRAINT ANGAZOVANO_POL_CHK CHECK (Pol IN ('M','Z'));
ALTER TABLE ANGAZOVANO_LICE ADD CONSTRAINT ANGAZOVANO_TELEFON_CHK CHECK(REGEXP_LIKE(Broj_telefona,'^[+0-9 -]{6,20}$'));
ALTER TABLE ANGAZOVANO_LICE ADD CONSTRAINT ANGAZOVANO_JMBG_CHK CHECK(REGEXP_LIKE(JMBG,'^[0-9]{13}$'));
ALTER TABLE ANGAZOVANO_LICE 
    ADD CONSTRAINT ANGAZOVANO_VOLONTER_CHK 
    CHECK (Volonter IN ('Y', 'N'));
ALTER TABLE ANGAZOVANO_LICE 
    ADD CONSTRAINT ANGAZOVANO_TRENER_CHK 
    CHECK (Trener IN ('Y', 'N'));
ALTER TABLE ANGAZOVANO_LICE 
    ADD CONSTRAINT ANGAZOVANO_ANIMATOR_CHK 
    CHECK (Animator IN ('Y', 'N'));
ALTER TABLE ANGAZOVANO_LICE 
    ADD CONSTRAINT ANGAZOVANO_ZDRAVSTVENI_CHK 
    CHECK (Zdravstveni_radnik IN ('Y', 'N'));

-- CONSTRAINTS ZA EVALUACIJA
ALTER TABLE EVALUACIJA ADD CONSTRAINT EVALUACIJA_PK PRIMARY KEY(ID);
ALTER TABLE EVALUACIJA ADD CONSTRAINT EVALUACIJA_OCENA_CHK CHECK(Ocena BETWEEN 1 AND 10);
ALTER TABLE EVALUACIJA ADD CONSTRAINT EVALUACIJA_JMBG_CHK 
    CHECK(REGEXP_LIKE(JMBG_lice, '^[0-9]{13}$'));
ALTER TABLE EVALUACIJA ADD CONSTRAINT EVALUACIJA_AKT_FK 
    FOREIGN KEY(ID_aktivnosti) REFERENCES AKTIVNOST(ID_aktivnosti) ON DELETE CASCADE;
ALTER TABLE EVALUACIJA ADD CONSTRAINT EVALUACIJA_JMBG_FK 
    FOREIGN KEY(JMBG_lice) REFERENCES ANGAZOVANO_LICE(JMBG) ON DELETE CASCADE;
ALTER TABLE EVALUACIJA ADD CONSTRAINT EVAL_UNIQ_AKT_LICE 
    UNIQUE (ID_aktivnosti, JMBG_lice);

-- CONSTRAINTS OBROK
ALTER TABLE OBROK ADD CONSTRAINT OBROK_PK PRIMARY KEY(ID); 
ALTER TABLE OBROK ADD CONSTRAINT OBROK_LOK_FK FOREIGN KEY(Naziv_lokacije) REFERENCES LOKACIJA(Naziv) ON DELETE CASCADE; 
ALTER TABLE OBROK ADD CONSTRAINT OBROK_AKTIVNOST_FK FOREIGN KEY(ID_aktivnosti) REFERENCES AKTIVNOST(ID_aktivnosti) ON DELETE CASCADE; 


-- CONSTRAINTS POVREDA
ALTER TABLE POVREDA ADD CONSTRAINT POVREDA_PK PRIMARY KEY(ID);
ALTER TABLE POVREDA ADD CONSTRAINT POVREDA_DETE_FK FOREIGN KEY(ID_dete) REFERENCES DETE(ID) ON DELETE CASCADE;
ALTER TABLE POVREDA ADD CONSTRAINT POVREDA_AKT_FK FOREIGN KEY(ID_aktivnosti) REFERENCES AKTIVNOST(ID_aktivnosti) ON DELETE CASCADE;
ALTER TABLE POVREDA ADD CONSTRAINT POVREDA_OSOBLJE_FK FOREIGN KEY(Odgovorno_osoblje_JMBG) REFERENCES ANGAZOVANO_LICE(JMBG) ON DELETE CASCADE;

-- CONSTRAINTS ZA JE_DAT
ALTER TABLE JE_DAT ADD CONSTRAINT JE_DAT_PK PRIMARY KEY(ID);
ALTER TABLE JE_DAT ADD CONSTRAINT JE_DAT_DETE_FK FOREIGN KEY(ID_dete) REFERENCES DETE(ID) ON DELETE CASCADE;
ALTER TABLE JE_DAT ADD CONSTRAINT JE_DAT_OBROK_FK FOREIGN KEY(ID_obrok) REFERENCES OBROK(ID) ON DELETE CASCADE;

-- CONSTRAINTS ZA UCESCE
ALTER TABLE UCESCE ADD CONSTRAINT UCESCE_PK PRIMARY KEY(ID);
ALTER TABLE UCESCE ADD CONSTRAINT UCESCE_AKT_FK FOREIGN KEY(ID_aktivnosti) REFERENCES AKTIVNOST(ID_aktivnosti) ON DELETE CASCADE;
ALTER TABLE UCESCE ADD CONSTRAINT UCESCE_JMBG_FK FOREIGN KEY(JMBG) REFERENCES ANGAZOVANO_LICE(JMBG) ON DELETE CASCADE;

-- CONSTRAINTS ZA TELEFON_RODITELJA
ALTER TABLE TELEFON_RODITELJA ADD CONSTRAINT TEL_PK PRIMARY KEY(ID);
ALTER TABLE TELEFON_RODITELJA ADD CONSTRAINT TEL_FK FOREIGN KEY(ID_deteta) REFERENCES DETE(ID) ON DELETE CASCADE;

-- CONSTRAINTS ZA EMAIL_RODITELJA
ALTER TABLE EMAIL_RODITELJA ADD CONSTRAINT EMAIL_PK PRIMARY KEY(ID);
ALTER TABLE EMAIL_RODITELJA ADD CONSTRAINT EMAIL_FK FOREIGN KEY(ID_deteta) REFERENCES DETE(ID) ON DELETE CASCADE;






-- =========================================
-- INDEXI
-- =========================================

-- DETE
CREATE INDEX IDX_DETE_PREZIME ON DETE(Prezime);
CREATE INDEX IDX_DETE_POL ON DETE(Pol);

-- RODITELJ
CREATE INDEX IDX_RODITELJ_PREZIME ON RODITELJ(Prezime);

-- AKTIVNOST
CREATE INDEX IDX_AKTIVNOST_TIP ON AKTIVNOST(Tip);
CREATE INDEX IDX_AKTIVNOST_DATUM ON AKTIVNOST(Datum);
CREATE INDEX IDX_AKTIVNOST_LOK ON AKTIVNOST(Naziv_lokacije);

-- PRIJAVA
CREATE INDEX IDX_PRIJAVA_STATUS ON PRIJAVA(Status);

-- UCESTVUJE
CREATE INDEX IDX_UCESTVUJE_AKT ON UCESTVUJE(ID_aktivnosti);
CREATE INDEX IDX_UCESTVUJE_DETE ON UCESTVUJE(ID_dete);

-- EVALUACIJA
CREATE INDEX IDX_EVALUACIJA_AKT ON EVALUACIJA(ID_aktivnosti);
CREATE INDEX IDX_EVALUACIJA_JMBG ON EVALUACIJA(JMBG_lice);

-- OBROK
CREATE INDEX IDX_OBROK_LOK ON OBROK(Naziv_lokacije);






-- =========================================
-- TRIGGERI
-- =========================================



CREATE OR REPLACE TRIGGER DETE_PK_TRG
BEFORE INSERT ON DETE
FOR EACH ROW
BEGIN
    SELECT DETE_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER DETE_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER RODITELJ_PK_TRG
BEFORE INSERT ON RODITELJ
FOR EACH ROW
BEGIN
    SELECT RODITELJ_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER RODITELJ_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER AKTIVNOST_PK_TRG
BEFORE INSERT ON AKTIVNOST
FOR EACH ROW
BEGIN
    SELECT AKTIVNOST_ID_SEQ.NEXTVAL INTO :NEW.ID_aktivnosti FROM DUAL;
END;
/
ALTER TRIGGER AKTIVNOST_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER PRIJAVA_PK_TRG
BEFORE INSERT ON PRIJAVA
FOR EACH ROW
BEGIN
    SELECT PRIJAVA_ID_SEQ.NEXTVAL INTO :NEW.ID_prijave FROM DUAL;
END;
/
ALTER TRIGGER PRIJAVA_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER EVALUACIJA_PK_TRG
BEFORE INSERT ON EVALUACIJA
FOR EACH ROW
BEGIN
    SELECT EVALUACIJA_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER EVALUACIJA_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER OBROK_PK_TRG
BEFORE INSERT ON OBROK
FOR EACH ROW
BEGIN
    SELECT OBROK_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER OBROK_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER POVREDA_PK_TRG
BEFORE INSERT ON POVREDA
FOR EACH ROW
BEGIN
    SELECT POVREDA_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER POVREDA_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER STARATELJSTVO_PK_TRG
BEFORE INSERT ON STARATELJSTVO
FOR EACH ROW
BEGIN
    SELECT STARATELJSTVO_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER STARATELJSTVO_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER UCESTVUJE_PK_TRG
BEFORE INSERT ON UCESTVUJE
FOR EACH ROW
BEGIN
    SELECT UCESTVUJE_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER UCESTVUJE_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER JE_DAT_PK_TRG
BEFORE INSERT ON JE_DAT
FOR EACH ROW
BEGIN
    SELECT JE_DAT_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER JE_DAT_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER UCESCE_PK_TRG
BEFORE INSERT ON UCESCE
FOR EACH ROW
BEGIN
    SELECT UCESCE_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER UCESCE_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER TEL_PK_TRG
BEFORE INSERT ON TELEFON_RODITELJA
FOR EACH ROW
BEGIN
    SELECT TELEFON_RODITELJA_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER TEL_PK_TRG ENABLE;

CREATE OR REPLACE TRIGGER EMAIL_PK_TRG
BEFORE INSERT ON EMAIL_RODITELJA
FOR EACH ROW
BEGIN
    SELECT EMAIL_RODITELJA_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER EMAIL_PK_TRG ENABLE;
